<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutDir>..\..\bin\$(Configuration)</OutDir>
    <RootNamespace>LiveSplit</RootNamespace>
    <TargetFramework>net4.6.1</TargetFramework>
    <UseWindowsForms>true</UseWindowsForms>

    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GenerateResourceUsePreserializedResources>true</GenerateResourceUsePreserializedResources>
    <Nullable>disable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="x86\livesplit_core.dll" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="x64\livesplit_core.dll" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\lib\SpeedrunComSharp\src\SpeedrunComSharp\SpeedrunComSharp.csproj" />
    <ProjectReference Include="..\UpdateManager\UpdateManager.csproj" />
    <ProjectReference Include="..\..\lib\CustomFontDialog\CustomFontDialog\CustomFontDialog.csproj" />
    <ProjectReference Include="..\..\lib\WinForms Color Picker\WinFormsColor\WinFormsColor.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Codaxy.Xlio" Version="0.9.3.26" />
    <PackageReference Include="IrcDotNet" Version="0.4.1" />
    <PackageReference Include="SharpDX.DirectInput" Version="2.5.0" />
    <PackageReference Include="SharpZipLib" Version="1.3.3" />
    <PackageReference Include="System.Resources.Extensions" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="PresentationCore" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="WindowsBase" />
  </ItemGroup>

  <PropertyGroup>
    <PreBuildEvent>
      mkdir "$(MSBuildProjectDirectory)\Updates\GitInfo\."
      where git
      if %25ERRORLEVEL%25 == 0 (
        git describe --dirty --always --long --tags &gt; "$(MSBuildProjectDirectory)\Updates\GitInfo\version.txt"
        git rev-parse --abbrev-ref HEAD &gt; "$(MSBuildProjectDirectory)\Updates\GitInfo\branch.txt"
        git rev-parse HEAD &gt; "$(MSBuildProjectDirectory)\Updates\GitInfo\revision.txt"
      ) else (
        touch "$(MSBuildProjectDirectory)\Updates\GitInfo\version.txt"
        touch "$(MSBuildProjectDirectory)\Updates\GitInfo\branch.txt"
        touch "$(MSBuildProjectDirectory)\Updates\GitInfo\revision.txt"
      )
      EXIT 0
    </PreBuildEvent>
  </PropertyGroup>

</Project>
